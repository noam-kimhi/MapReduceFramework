.PHONY: all clean tar SampleClient runSampleClient

CXX=g++
AR=ar

# Source and object files
LIBSRC=src/MapReduceFramework.cpp src/JobStateManager.cpp src/Barrier.cpp
LIBOBJ=$(LIBSRC:.cpp=.o)

# Sample client
SAMPLE_CLIENT=sample_client
SAMPLE_CLIENT_SRC=example/SampleClient.cpp

# Compiler & linker flags
RM=rm
RMFLAGS=-f
INCS=-Iinclude
CXXFLAGS=-Wall -std=c++20 -pthread -g $(INCS)
LDFLAGS=-L. -lMapReduceFramework

# Tar packaging
TARFLAGS=-cvf
TARNAME=MapReduceFramework.tar
TARSRCS=$(LIBSRC) include/MapReduceClient.h include/MapReduceFramework.h \
        include/JobStateManager.h include/Barrier.h Makefile CMakeLists.txt

# Library name
LIBRARY=libMapReduceFramework.a

# The default target, which builds the library
all: $(LIBRARY)

# Build static library
$(LIBRARY): $(LIBOBJ)
	$(AR) rcs $@ $(LIBOBJ)

# Compile each source file into object
%.o: src/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# A clean target that removes everything generated by the build process
clean:
	$(RM) $(RMFLAGS) $(LIBRARY) $(LIBOBJ) $(SAMPLE_CLIENT)

# A target to create a tarball of the source files
tar: $(TARSRCS)
	tar $(TARFLAGS) $(TARNAME) $(TARSRCS)

# A target to build the sample client using the library
SampleClient: $(LIBRARY) $(SAMPLE_CLIENT_SRC)
	$(CXX) $(CXXFLAGS) $(SAMPLE_CLIENT_SRC) $(LDFLAGS) -o $(SAMPLE_CLIENT)

# Run the sample client
runSampleClient: SampleClient
	./$(SAMPLE_CLIENT)
